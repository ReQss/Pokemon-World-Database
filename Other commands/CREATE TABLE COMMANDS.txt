CREATE TABLE PLAYERS(
player_id INT IDENTITY(1,1),
collected_badges INT,
won_duels INT,
CONSTRAINT not_negativeB CHECK (collected_badges >= 0),
CONSTRAINT not_negativeD CHECK (won_duels >= 0),
)

1. **LEADERS**

CREATE TABLE LEADERS (
leader_id INT IDENTITY(1,1),
date_of_become DATE NOT NULL,
CONSTRAINT date_not_later_than_today CHECK (date_of_become <= GETDATE()),
)

1. **BUILDINGS**

CREATE TABLE BUILDINGS(
bulding_id INT IDENTITY(1,1),
name VARCHAR(40) NOT NULL,
type VARCHAR(30) NOT NULL,
area INT NOT NULL CONSTRAINT not_negativeArea CHECK (area >= 0),
flors INT DEFAULT 0 CONSTRAINT not_negativeFlors CHECK (flors >= 0),
)

1. **TYPES**

CREATE TABLE TYPES(
type_name VARCHAR(30) NOT NULL,
PRIMARY KEY(type_name),
)

1. **MOVES**

CREATE TABLE MOVES(
move_id INT IDENTITY(1,1),
name VARCHAR(40) NOT NULL,
type VARCHAR(30) NOT NULL,
category VARCHAR(30) NOT NULL,
power INT CONSTRAINT not_negative CHECK (power >= 0),
FOREIGN KEY (type) REFERENCES TYPES (type_name)
)

1. **PEOPLE**
    
    
    ```sql
    CREATE TABLE PEOPLE(
    	person_id INT IDENTITY(1,1),
    	name VARCHAR(40) NOT NULL,
    	phone VARCHAR(60) CONSTRAINT phoneNum CHECK (phone LIKE '[0-9]%[0-9]'),
    	address VARCHAR(100) NOT NULL,
    	player_id INT,
    	leader_id INT,
    	FOREIGN KEY (player_id) REFERENCES PLAYERS(player_id),
    	FOREIGN KEY (leader_id) REFERENCES LEADERS(leader_id),
    	PRIMARY KEY(person_id),
    )
    ```
    

1. **GYMS** 

CREATE TABLE GYMS(
gym_id INT IDENTITY(1,1) PRIMARY KEY,
name VARCHAR(40) NOT NULL,
badge_name VARCHAR(30) NOT NULL,
type VARCHAR(30) NOT NULL,
leader_id INT,
FOREIGN KEY (type) REFERENCES TYPES(type_name),
FOREIGN KEY (leader_id) REFERENCES LEADERS(leader_id),
)

1. **POKEMONS**

```sql
CREATE TABLE POKEMONS(
	pokemon_id INT IDENTITY(1,1) PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	type1 VARCHAR(30) NOT NULL,
	type2 VARCHAR(30),
	evolution_level INT CONSTRAINT CK_ev_lvl CHECK (evolution_level >= 1  AND evolution_level â‰¤ 3 ),
	generation INT CONSTRAINT CK_not_negativeFlors CHECK (generation  >= 1),
	FOREIGN KEY (type1) REFERENCES TYPES(type_name),
	FOREIGN KEY (type2) REFERENCES TYPES(type_name),
)
```

1. **CITIES**

CREATE TABLE CITIES(
city_id INT IDENTITY(1,1) PRIMARY KEY,
name VARCHAR(50) NOT NULL,
population INT NOT NULL CONSTRAINT not_negativePop CHECK (population >= 0),
gym_id INT,
bulding_id INT NOT NULL,
FOREIGN KEY (gym_id) REFERENCES GYMS(gym_id),
FOREIGN KEY (bulding_id) REFERENCES BUILDINGS(bulding_id),
)

1. **ISLANDS**

CREATE TABLE ISLANDS(
island_id INT IDENTITY(1,1) PRIMARY KEY,
name VARCHAR(50) NOT NULL,
population INT NOT NULL CONSTRAINT not_negativePopulation CHECK (population > 0),
area INT NOT NULL CONSTRAINT not_negativeArea1 CHECK (area > 0),
gym_id INT,
FOREIGN KEY (gym_id) REFERENCES GYMS(gym_id),
)

1. **REGIONS**

CREATE TABLE REGIONS(
region_id INT IDENTITY(1,1) PRIMARY KEY,
name VARCHAR(50) NOT NULL,
population INT NOT NULL CONSTRAINT not_negativePopReg CHECK (population > 0),
area INT NOT NULL CONSTRAINT not_negativeAReg CHECK (area > 0),
city_id INT NOT NULL,
island_id INT,
FOREIGN KEY (city_id) REFERENCES CITIES(city_id),
FOREIGN KEY (island_id) REFERENCES ISLANDS(island_id),
)

1. **PLAYER_HAND**

```sql
CREATE TABLE PLAYER_HAND(
	player_hand_id INT IDENTITY(1,1) PRIMARY KEY,
	player_id INT NOT NULL,
	leader_id INT,
	pokemon_id INT NOT NULL,
	poke_lvl INT NOT NULL CONSTRAINT not_neg CHECK (poke_lvl > 0 AND poke_lvl <= 100),
	pok_evolution_stage INT NOT NULL CONSTRAINT evolution CHECK (pok_evolution_stage >= 1 AND pok_evolution_stage <= 3),
	relation_with_pokemon VARCHAR(30),
	move_id INT NOT NULL,
	FOREIGN KEY (player_id) REFERENCES PLAYERS(player_id),
	FOREIGN KEY (leader_id) REFERENCES LEADERS(leader_id),
	FOREIGN KEY (pokemon_id) REFERENCES POKEMONS(pokemon_id),
	FOREIGN KEY (move_id) REFERENCES MOVES(move_id),
)
```

ignore autoincrement

SET IDENTITY_INSERT PLAYER_HAND ON;
INSERT INTO PLAYER_HAND (player_hand_id, player_id, leader_id, pokemon_id, poke_lvl, pok_evolution_stage, relation_with_pokemon, move_id)
VALUES
(1, 1, NULL, 5, 1, 2, 'good', 10),
(2, 1, NULL, 8, 2, 3, 'bad', 15),
(3, 1, NULL, 12, 3, 1, 'neutral', 6),
(4, 1, NULL, 17, 1, 3, 'good', 21),
(5, 1, NULL, 21, 2, 1, 'bad', 2),
(6, 1, NULL, 29, 3, 2, 'neutral', 9);
SET IDENTITY_INSERT PLAYER_HAND OFF;